//Create the table using SQL script
USE [DataScience]
GO

/****** Object:  Table [dbo].[CRIME]    Script Date: 21/11/2022 6:56:46 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[CRIME](
	[ID] [bigint] NULL,
	[CASE_NUMBER] [nchar](50) NULL,
	[Date] [date] NULL,
	[BLOCK] [nchar](70) NULL,
	[IUCR] [bigint] NULL,
	[PRIMARY_TYPE] [nchar](10) NULL,
	[DESCRIPTION] [nchar](500) NULL,
	[LOCATION_DESCRIPTION] [nchar](100) NULL,
	[ARREST] [nchar](100) NULL,
	[DOMESTIC] [nchar](100) NULL,
	[BEAT] [bigint] NULL,
	[DISTRICT] [int] NULL,
	[WARD] [int] NULL,
	[COMMUNITY_AREA_NUMBER] [int] NULL,
	[FBICODE] [nchar](10) NULL,
	[X_COORDINATE] [bigint] NULL,
	[Y_COORDINATE] [bigint] NULL,
	[YEAR] [int] NULL,
	[LATITUDE] [float] NULL,
	[LONGITUDE] [float] NULL,
	[LOCATION] [nchar](500) NULL
) ON [PRIMARY]
GO


###Pythone Code to insert the data
import datetime
import time

import pandas as pd
import pyodbc as sql

df = pd.read_csv('ChicagoCrimeData.csv')

for row in range(len(df)):
    con = sql.connect('DRIVER={SQL Server};SERVER=BI-PC\sql2019;DATABASE=DataScience;UID=sa;PWD=123')
    cursor = con.cursor()
    cursor.execute('INSERT INTO [dbo].[CRIME] ([ID],[CASE_NUMBER],[Date],[BLOCK],[IUCR],[PRIMARY_TYPE],[DESCRIPTION],[LOCATION_DESCRIPTION]'
                   ',[ARREST],[DOMESTIC],[BEAT],[DISTRICT],[WARD],[COMMUNITY_AREA_NUMBER],[FBICODE],[X_COORDINATE],[Y_COORDINATE],[YEAR],[LATITUDE]'
                   ',[LONGITUDE],[LOCATION]) '
                   'VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)',
                   (
                       float(df.iloc[row][0]),df.iloc[row][1],datetime.date(df.iloc[row][2]),df.iloc[row][3],float(df.iloc[row][4]),df.iloc[row][5],
                       df.iloc[row][6],df.iloc[row][7],bool(df.iloc[row][8]),bool(df.iloc[row][9]),float(df.iloc[row][10]),float(df.iloc[row][11]),float(df.iloc[row][12]),
                       float(df.iloc[row][13]),df.iloc[row][14],float(df.iloc[row][15]),float(df.iloc[row][16]),float(df.iloc[row][17]),float(df.iloc[row][18]),float(df.iloc[row][19]),
                       df.iloc[row][20]))
    cursor.commit()
con.close()
